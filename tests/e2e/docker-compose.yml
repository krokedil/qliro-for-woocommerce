services:
  db:
    container_name: qliro_e2e_db
    platform: linux/x86_64
    image: mysql
    restart: on-failure
    environment:
      MYSQL_DATABASE: wpdb
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_ROOT_PASSWORD: wordpress
    volumes:
      - db:/var/lib/mysql
    ports:
      - "33066:3306"
    healthcheck:
      test:
        [
          "CMD",
          'mysqladmin',
          'ping',
          '-h',
          'db',
          '-u',
          'root',
          '-p$$MYSQL_ROOT_PASSWORD'
        ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    networks:
      - wordpress
  wp:
    container_name: qliro_e2e_wp
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - WP_IMAGE=${WP_IMAGE:-wordpress:latest}
    ports:
      - "8080:80"
    restart: on-failure
    environment:
      BASE_URL: https://krokedil.e2e.eu.ngrok.io
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wpdb
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_TABLE_PREFIX: wp_
      WC_VERSION: ${WC_VERSION-}
    volumes:
      - "../../:/var/www/html/wp-content/plugins/qliro-one-for-woocommerce"
      - "wordpress:/var/www/html"
    healthcheck:
      test: [ "CMD", 'curl', '-f', 'wp' ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    networks:
      - e2e-ngrok
      - wordpress
  wp-cli:
    depends_on:
      db:
        condition: service_healthy
      wp:
        condition: service_healthy
    image: wordpress:cli
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wpdb
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_TABLE_PREFIX: wp_
      WC_VERSION: ${WC_VERSION-}
    restart: on-failure
    user: xfs
    command:
      - /bin/bash
      - -c
      - |
        wp core install --url='https://krokedil.e2e.eu.ngrok.io' --title='Krokedil E2E Test' --admin_user='admin' --admin_password='password' --admin_email='e2e@krokedil.se' --skip-email --skip-plugins --skip-themes
        wp rewrite structure '/%postname%/' --hard
        if [ -z "$${WC_VERSION}" ]; then
          wp plugin install woocommerce --activate
        else
          wp plugin install woocommerce --version=$${WC_VERSION} --activate
        fi
        wp plugin install wp-mail-logging --activate
        wp theme install storefront --activate
        wp plugin install https://github.com/WP-API/Basic-Auth/archive/master.zip --activate
        wp plugin activate qliro-one-for-woocommerce
        wp option update woocommerce_default_country SE
        wp option update woocommerce_currency SEK
        wp option update woocommerce_terms_page_id "3"
        exit 0
    volumes:
      - "../../:/var/www/html/wp-content/plugins/qliro-one-for-woocommerce"
      - "wordpress:/var/www/html"
    networks:
      - wordpress
  ngrok:
    depends_on:
      db:
        condition: service_healthy
      wp:
        condition: service_healthy
    image: wernight/ngrok
    restart: on-failure
    ports:
      - "4040:4040"
    entrypoint: /bin/sh -c "ngrok http --region=eu --hostname=krokedil.e2e.eu.ngrok.io --authtoken=$${NGROK_TOKEN} wp"
    networks:
      - e2e-ngrok
volumes:
  db:
  wordpress:

networks:
  e2e-ngrok:
  wordpress:
